apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion compile_sdk_version


    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 出现 "org.jetbrains.kotlin.kapt3.base.ProcessorWrapper 的受支持 source 版本 RELEASE_7 低于 -source 1.8" warning 时
    // 如下配置可规避
    kotlinOptions {
        jvmTarget = "1.8"
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    api "com.android.support:design:${android_support_version}"
    api "com.android.support:recyclerview-v7:${android_support_version}"
    api "com.android.support:cardview-v7:${android_support_version}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Anko Commons
    api "org.jetbrains.anko:anko-commons:$anko_version"
    api "org.jetbrains.anko:anko-appcompat-v7:$anko_version"

    // rx
    api "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    api "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // rxlifecycle
    api "com.trello.rxlifecycle3:rxlifecycle:$rx_lifecycle_version"
    api "com.trello.rxlifecycle3:rxlifecycle-components:$rx_lifecycle_version"

    // rx bus
    api "com.eightbitlab:rxbus:$rx_bus_version"

    // http
    api "com.squareup.okhttp3:okhttp:$ok_http_version"
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // dagger (kapt[kotlin 的注解生成器] 是哪个地方使用就需要在哪个地方配置的)
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // glide
    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // circle imageview
    api "de.hdodenhof:circleimageview:$circle_imageview_version"

    // take photo
    api "org.devio.takephoto:takephoto_library:$take_photo_version"

    // alert view
    api "com.bigkoo:alertview:$alert_view_version"

    // 七牛
    api "com.qiniu:qiniu-android-sdk:$qiniu_sdk_version"

    // bottom nav bar
    api "com.ashokvarma.android:bottom-navigation-bar:$bottom_nav_bar_version"

    // banner
    api "com.youth.banner:banner:$banner_version"

    // triangle label view 三角形小图标
    api "com.github.shts:TriangleLabelView:$triangle_label_view_version"

    // cover flow 画廊
    api "com.github.crosswall:Android-Coverflow:$cover_flow_version"

    // 多状态视图
    api "com.github.Kennyc1012:MultiStateView:$multistate_view_version"

    // 上下拉刷新
    api "cn.bingoogolapple:bga-refreshlayout:$refreshlayout_version"

    // flow layout
    api "com.zhy:flowlayout-lib:$flowlayout_version"

    // badge view
    api "q.rorbin:badgeview:$badgeview_version"

    // number button
    api "ren.qinc.numberbutton:numberbutton:$number_button_version"

    // arouter
    api "com.alibaba:arouter-api:$arouter_api_version"
    kapt "com.alibaba:arouter-compiler:$arouter_compiler_version"
}
